@import '../../../scss/2.colors';
@import '../../../scss//4.fontSize';

.InputField{
    display: flex;
    flex-direction: column-reverse;
    position: relative;

    &_Input, &_Select, &_Checkbox{
        width: 100%;
        height: 100%;
        min-width: 6vmax;
        padding-top: calc(1rem + 2vmax);
        background: none;
        border: none;
        outline: none;
        padding-left: 1vmax;
        text-align: center;
        font-size: getFontSize(xs);
        color: getColor(color_text);
    }

    &_Select{
        -webkit-appearance: none;
        cursor: pointer;
        //background-color: getColor(color_background);
    }

    &_Checkbox{
        cursor: pointer;
        //min-height: 3vmax;
        opacity: 0;
    }

    &_Label{
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        border-bottom: 1px solid getColor(color_text);

        &::after{
            content: "";
            position: absolute;
            left: 0;
            bottom: -1.5px;
            width: 100%;
            height: 100%;
            border-bottom: 0.15vmax solid getColor(color_nav);
            transform: scaleX(0);
            transform-origin: left;

            transition: all 0.3s ease-in-out;
        }
    }

    &_Span{
        position: absolute;
        bottom: 0;
        left: 0;
        padding-left: 1vmax;

        transition: all 0.3s ease-in-out;
    }

    &_Checkbox + &_Label{
        width: 70%;
        left:15%;
    }

    &_Select:focus + &_Label &_Span,
    &_Select:not(:empty) + &_Label &_Span,
    &_Input:focus + &_Label &_Span,
    &_Input:not([value = ""]) + &_Label &_Span{
        transform: translateY(-110%);
        color: getColor(color_nav);
    }

    &_Checkbox:checked + &_Label &_Span{
        color: getColor(color_nav);
    }

    &_Checkbox:checked + &_Label::after,
    &_Select:focus + &_Label::after,
    &_Select:not(:empty) + &_Label::after,
    &_Input:focus + &_Label::after,
    &_Input:not([value = ""]) + &_Label::after{
        transform: scaleX(1);
    }
}

.invalid{
    /* STYLE */
    color:red !important;
}

// MEDIA QUERIES 
@media (max-width:1024px){
    .InputField{
        &_Input, &_Select{
            font-size: getFontSize(s);
        }
    }
}